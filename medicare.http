@medicare_HostAddress = http://localhost:5151

### Test 1: Get Users (Admin only - will likely fail without auth)
GET {{medicare_HostAddress}}/api/Admin/users
Content-Type: application/json
Authorization: Bearer 


### Test 3: Login (FIXED - removed trailing comma)
POST {{medicare_HostAddress}}/api/Auth/login
Content-Type: application/json

{
  "username": "nagari",
  "password": "nagari615"
}


### Test 5: Register with string role
POST {{medicare_HostAddress}}/api/Auth/register
Content-Type: application/json

{
  "email": "salisuaminu615@gmail.com",
  "username": "Yalwa",
  "password": "Az123456789",
  "role": 1
}

###
POST {{medicare_HostAddress}}/api/Auth/login
Content-Type: application/json

{
  
  "username": "admin",
  "password": "Admin@123"
}

### Test 6: Test email confirmation (replace with actual values)
GET {{medicare_HostAddress}}/api/Auth/confirm-email?userId=REPLACE_WITH_ACTUAL_USER_ID&token=REPLACE_WITH_ACTUAL_TOKEN


###

### =============================================
### ROLE MANAGEMENT ENDPOINTS (Admin only)
### =============================================

###
### Get all available permissions
GET {{medicare_HostAddress}}/api/Roles/permissions
Content-Type: application/json
Authorization: Bearer 


### Get all roles
GET {{medicare_HostAddress}}/api/Roles
Content-Type: application/json
Authorization: Bearer {{admin_token}}

### Get specific role by ID
GET {{medicare_HostAddress}}/api/Roles/REPLACE_WITH_ROLE_ID
Content-Type: application/json
Authorization: Bearer 

### Create new role
### Create role with valid permissions
POST {{medicare_HostAddress}}/api/Roles
Content-Type: application/json
Authorization: Bearer 

{
  "name": "LabTechnician",
  "description": "Laboratory technician role",
  "permissions": ["patients.view", "testresults.view"]
}

### Update role
PUT {{medicare_HostAddress}}/api/Roles/REPLACE_WITH_ROLE_ID
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "description": "Updated laboratory technician role with more permissions",
  "permissions": ["patients.view", "testresults.view", "testresults.create", "testresults.edit"]
}

### Delete role
DELETE {{medicare_HostAddress}}/api/Roles/REPLACE_WITH_ROLE_ID
Content-Type: application/json
Authorization: Bearer {{admin_token}}

### Get all permissions
GET {{medicare_HostAddress}}/api/Roles/permissions
Content-Type: application/json
Authorization: Bearer {{admin_token}}

### Assign role to user
POST {{medicare_HostAddress}}/api/Roles/assign
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "userId": "REPLACE_WITH_USER_ID",
  "roleId": "REPLACE_WITH_ROLE_ID"
}

### Unassign role from user
DELETE {{medicare_HostAddress}}/api/Roles/unassign
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "userId": "REPLACE_WITH_USER_ID",
  "roleId": "REPLACE_WITH_ROLE_ID"
}

### =============================================
### USER MANAGEMENT ENDPOINTS (Admin only)
### =============================================

### Get all users
GET {{medicare_HostAddress}}/api/Admin/users
Content-Type: application/json
Authorization: Bearer {{admin_token}}

### Create new user (Admin can assign specific role)
POST {{medicare_HostAddress}}/api/Admin/users
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "email": "newdoctor@medicare.com",
  "username": "newdoctor",
  "password": "Doctor@123",
  "roleId": "REPLACE_WITH_DOCTOR_ROLE_ID"
}

### Delete user
DELETE {{medicare_HostAddress}}/api/Admin/users/REPLACE_WITH_USER_ID
Content-Type: application/json
Authorization: Bearer {{admin_token}}

### =============================================
### PATIENT MANAGEMENT ENDPOINTS
### =============================================

### Get patient record (requires CanViewPatient policy)
GET {{medicare_HostAddress}}/api/Patients/REPLACE_WITH_PATIENT_ID
Content-Type: application/json
Authorization: Bearer {{doctor_token}}

### Update patient record (requires CanUpdatePatient policy)
PUT {{medicare_HostAddress}}/api/Patients/REPLACE_WITH_PATIENT_ID
Content-Type: application/json
Authorization: Bearer {{doctor_token}}

{
  "fullName": "Updated Patient Name"
}

### Add vital signs to patient
POST {{medicare_HostAddress}}/api/Patients/REPLACE_WITH_PATIENT_ID/vitals
Content-Type: application/json
Authorization: Bearer {{nurse_token}}

{
  "type": "BP",
  "value": "120/80",
  "notes": "Normal blood pressure",
  "recordedAt": "2024-01-15T10:30:00Z"
}

### Prescribe medication to patient (requires CanPrescribe policy)
POST {{medicare_HostAddress}}/api/Patients/REPLACE_WITH_PATIENT_ID/prescriptions
Content-Type: application/json
Authorization: Bearer {{doctor_token}}

{
  "medication": "Amoxicillin",
  "dosage": "500mg",
  "createdAt": "2024-01-15T10:30:00Z"
}

### Get patient test results
GET {{medicare_HostAddress}}/api/Patients/REPLACE_WITH_PATIENT_ID/tests
Content-Type: application/json
Authorization: Bearer {{doctor_token}}

### =============================================
### VARIABLES SECTION - Store tokens here after login
### =============================================

### After successful login, copy the token here:
# @name admin_login
POST {{medicare_HostAddress}}/api/Auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "Admin@123"
}

###
@admin_token = {{admin_login.response.body.$.token}}

### Doctor login
# @name doctor_login
POST {{medicare_HostAddress}}/api/Auth/login
Content-Type: application/json

{
  "username": "drjohn",
  "password": "Doctor@123"
}

###
@doctor_token = {{doctor_login.response.body.$.token}}

### Nurse login
# @name nurse_login
POST {{medicare_HostAddress}}/api/Auth/login
Content-Type: application/json

{
  "username": "nursemary",
  "password": "Nurse@123"
}

###
@nurse_token = {{nurse_login.response.body.$.token}}

### Patient login
# @name patient_login
POST {{medicare_HostAddress}}/api/Auth/login
Content-Type: application/json

{
  "username": "patient1",
  "password": "Patient@123"
}

###
@patient_token = {{patient_login.response.body.$.token}}



